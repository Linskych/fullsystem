#数据库基础配置
# mysql
jdbc.database.driverClass=com.mysql.cj.jdbc.Driver
jdbc.database.jdbcUrl=jdbc:mysql://127.0.0.1:3306/skych?characterEncoding=UTF-8&useUnicode=true&useSSL=false
jdbc.database.user=user
jdbc.database.password=passwd


#连接池信息配置

# c3p0
jdbc.c3p0.initialPoolSize=5
jdbc.c3p0.minPoolSize=5
jdbc.c3p0.maxPoolSize=20
# 每次新增连接数
jdbc.c3p0.acquireIncrement=5
# 连接空闲时间(秒)
jdbc.c3p0.maxIdleTime=1800

# 配置连接检测
# 使用jdbc4 API且c3p0(0.9.5)以上版本时，不必配置连接测试，c3p0会自动处理
# If you are using a JDBC driver that you are certain supports the new(ish) jdbc4 API — and if you are using c3p0-0.9.5 or higher! — let your driver handle this for you.
# jdbc4 Connections include a method called isValid() that should be implemented as a fast, reliable Connection test.
# By default, c3p0 will use that method if it is present.
# 空闲连接检测周期(秒)。在注重性能的情况下，可以设置稍微长一点的检测周期并且关闭checkin和checkout的检测
jdbc.c3p0.idleConnectionTestPeriod=60
jdbc.c3p0.testConnectionOnCheckin=false
# 在checkout时检测影响效率，但是可以保证应用所使用的连接是健康的
jdbc.c3p0.testConnectionOnCheckout=false
# 如果数据库支持select 1查询，直接使用preferredTestQuery就可以
jdbc.c3p0.preferredTestQuery=select 1
# 如果不支持select 1，则使用下面的配置，设置一个表的名称，c3p0会创建相应的表，并创建简单查询
# jdbc.c3p0.automaticTestTable=tbl_c3p0_test
# 可以自定义连接检测的方法和规则，只要实现ConnectionTester这个接口
# connectionTesterClassName=MyConnectionTester

# c3p0从数据库获取连接的配置
# c3p0获取连接失败时，尝试再次获取的次数(默认30)，设置为0时会无限次尝试直到获取成功
jdbc.c3p0.acquireRetryAttempts=20
# c3p0获取连接失败时，尝试再次获取连接的时间间隔(毫秒，默认1000)
jdbc.c3p0.acquireRetryDelay=500
# 当出现数据源尝试获取连接失败(重试之后仍失败)，false：下次有请求仍会获取连接；true：数据源认为自己存在问题，下次有请求时直接返回失败
jdbc.c3p0.breakAfterAcquireFailure=true







